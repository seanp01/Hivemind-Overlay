{
  "name": "hivemindoverlay",
  "description": "**HivemindOverlay** is a Chrome extension and optional server-side assistant that enhances Twitch and YouTube livestream chat by:",
  "main": "webpack.config.js",
  "scripts": {
    "build": "webpack --config webpack.config.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/seanp01/Hivemind-Overlay.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/seanp01/Hivemind-Overlay/issues"
  },
  "homepage": "https://github.com/seanp01/Hivemind-Overlay#readme",
  "dependencies": {
    "chart.js": "^4.4.9",
    "crypto-browserify": "^3.12.1",
    "fs": "^0.0.1-security",
    "tmi": "^2.0.0",
    "tmi.js": "^1.8.5"
  },
  "devDependencies": {
    "@babel/core": "^7.27.4",
    "@babel/preset-env": "^7.27.2",
    "babel-loader": "^10.0.0",
    "dotenv-webpack": "^8.1.0",
    "webpack": "^5.99.9",
    "webpack-cli": "^4.10.0"
  },
  "version": "1.28.0",
  "changelog": {
    "1.28.0": "Began implementing the viewer count via a twitch client that makes a call to the helix API. ~ Sean Parker",
    "1.27.0": "Updated the embed container and embed items. ~ Sean Parker",
    "1.26.0": "Updated the UI to use a grid configuration to support the message embeds and sentiment analysis together. ~ Sean Parker",
    "1.25.0": "Added more support for social media embeds. ~ Sean Parker",
    "1.24.0": "Began implementing chat message urls as embeds in the timeline. ~ Sean Parker",
    "1.23.0": "Updated the emotion radar html element to use a map projection of earth. ~ Sean Parker",
    "1.22.0": "Added an html and script for the emotion radar that will output the display values for the live sentiment summary analysis in an iframe using content.js. ~ Sean Parker",
    "1.21.0": "Scaffolding and initial implementation of summaryClient to communicate chat message window sentiments to the summary contextualizing LM. ~ Sean Parker",
    "1.20.0": "Implemented manual chat labeling to reduce load on the LM service by upgrading the chatClient to detect specific chat message cases. ~ Sean Parker",
    "1.19.0": "Added new sentiment labels and updated emoji mappings. ~ Sean Parker",
    "1.18.0": "Minor adjustments to the sentiment emoji set. ~ Sean Parker",
    "1.17.0": "Bug fix for supporting emojis in the pie chart label names. ~ Sean Parker",
    "1.16.0": "Added Borda count voting for more accurate multi-sentiment analysis. ~ Sean Parker",
    "1.15.0": "Refined the training dataset and added new sentiments for more precise analysis. ~ Sean Parker",
    "1.14.0": "Implemented a standard deviation adjuster labeled 'Peak Sensitivity' to control the peaks of interest. ~ Sean Parker",
    "1.13.0": "Added a double and triple click detection for chart label toggle all and reset. The message volume y axis is now dynamic and more accurate. ~ Sean Parker",
    "1.12.0": "Updated emoji sentiments to support tooltips, and implemented more dynamic sizing for the sentiment charts. ~ Sean Parker",
    "1.11.0": "Bug fixes and refinements for the bar chart and time slider. ~ Sean Parker",
    "1.10.0": "Implemented a line of emojis to indicate sentiment shifts during peak chat message volumes. ~ Sean Parker",
    "1.9.0": "Updated the legend for the pie chart. Toggling legend data now filters chat as well. ~ Sean Parker",
    "1.8.0": "Small visual adjustment to the timeline, slider, and bar chart. ~ Sean Parker",
    "1.7.0": "Small change to the timeline to update timestamp as real time progresses. ~ Sean Parker",
    "1.6.0": "More improvements for the bar chart. The slider now functions as a time select, and a timeline has been added below the slider and bar graph. ~ Sean Parker",
    "1.5.0": "Improved the bar chart visualization by adding a windowing frame radio button selection. And introduced a timeline bar topped with a bar chart corresponding to chat message volume. ~ Sean Parker",
    "1.4.0": "Added a pie chart using chart.js to visualize sentiment analysis results. The chart displays the distribution of positive, negative, and neutral sentiments in real-time chat messages. And added a message sentiment cache to track frequent messages to reduce service load. ~ Sean Parker",
    "1.3.0": "First working version of the overlay that outputs predictions from the LM service by tagging sentiments to messages in chat. ~ Sean Parker",
    "1.2.0": "Changes to begin emitting chat messages from the chatClient using tmi.js. The overlay presently mimics chat text in a sub-window overlay. ~ Sean Parker",
    "1.1.0": "Implemented webpack and built a webpack.config.js. Also implemented node and added a package.json. ~ Sean Parker",
    "1.0.0": "Initial solution commit. Icons and scaffolding. ~ Sean Parker"
  }
}
